{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\P12\\\\P12\\\\store-rating-review-app\\\\frontend\\\\src\\\\pages\\\\UserPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport StoreList from '../components/User/StoreList';\nimport RatingForm from '../components/User/RatingForm';\nimport useAuth from '../hooks/useAuth';\n\n// Define Store type locally since it's not exported from index.ts\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPage = () => {\n  _s();\n  const {\n    user,\n    loading: authLoading\n  } = useAuth();\n  const [stores, setStores] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState('');\n  const [selectedStoreId, setSelectedStoreId] = useState(null);\n  useEffect(() => {\n    if (!authLoading && user) {\n      const fetchStores = async () => {\n        try {\n          const response = await axios.get('/stores');\n          setStores(response.data);\n        } catch (err) {\n          setError('Failed to fetch stores');\n        } finally {\n          setLoading(false);\n        }\n      };\n      fetchStores();\n    } else if (!authLoading && !user) {\n      // If not logged in, set loading to false and show an error\n      setLoading(false);\n      setError('You must be logged in to view this page.');\n    }\n  }, [user, authLoading]); // Rerun effect when user or authLoading state changes\n\n  if (authLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading user authentication...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 29\n  }, this);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading store data...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-red-500 text-center mt-10 text-xl font-bold\",\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-page p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-2xl font-bold text-center mb-6\",\n      children: \"Browse Stores\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(StoreList, {\n      stores: stores,\n      onStoreSelect: setSelectedStoreId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), selectedStoreId && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-8\",\n      children: /*#__PURE__*/_jsxDEV(RatingForm, {\n        storeId: selectedStoreId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPage, \"amGeYVSPqsBMmngNkrTUtQtPMZw=\", false, function () {\n  return [useAuth];\n});\n_c = UserPage;\nexport default UserPage;\nvar _c;\n$RefreshReg$(_c, \"UserPage\");","map":{"version":3,"names":["React","useEffect","useState","axios","StoreList","RatingForm","useAuth","jsxDEV","_jsxDEV","UserPage","_s","user","loading","authLoading","stores","setStores","setLoading","error","setError","selectedStoreId","setSelectedStoreId","fetchStores","response","get","data","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","onStoreSelect","storeId","_c","$RefreshReg$"],"sources":["D:/Project/P12/P12/store-rating-review-app/frontend/src/pages/UserPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from '../api/axios';\nimport StoreList from '../components/User/StoreList';\nimport RatingForm from '../components/User/RatingForm';\nimport useAuth from '../hooks/useAuth';\n\n// Define Store type locally since it's not exported from index.ts\nexport interface Store {\n    id: number;\n    name: string;\n    // add other fields as needed\n}\n\nconst UserPage = () => {\n    const { user, loading: authLoading } = useAuth();\n    const [stores, setStores] = useState<Store[]>([]);\n    const [loading, setLoading] = useState(true);\n    const [error, setError] = useState('');\n    const [selectedStoreId, setSelectedStoreId] = useState<number | null>(null);\n\n    useEffect(() => {\n        if (!authLoading && user) {\n            const fetchStores = async () => {\n                try {\n                    const response = await axios.get('/stores');\n                    setStores(response.data);\n                } catch (err) {\n                    setError('Failed to fetch stores');\n                } finally {\n                    setLoading(false);\n                }\n            };\n            fetchStores();\n        } else if (!authLoading && !user) {\n            // If not logged in, set loading to false and show an error\n            setLoading(false);\n            setError('You must be logged in to view this page.');\n        }\n    }, [user, authLoading]); // Rerun effect when user or authLoading state changes\n\n    if (authLoading) return <div>Loading user authentication...</div>;\n    if (loading) return <div>Loading store data...</div>;\n    if (error) return <div className=\"text-red-500 text-center mt-10 text-xl font-bold\">{error}</div>;\n\n    return (\n        <div className=\"user-page p-6\">\n            <h1 className=\"text-2xl font-bold text-center mb-6\">Browse Stores</h1>\n            \n            <StoreList stores={stores} onStoreSelect={setSelectedStoreId} />\n\n            {selectedStoreId && (\n                <div className=\"mt-8\">\n                    <RatingForm storeId={selectedStoreId} />\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default UserPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}