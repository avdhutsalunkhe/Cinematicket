{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\P12\\\\P12\\\\store-rating-review-app\\\\frontend\\\\src\\\\components\\\\Admin\\\\Dashboard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [dashboardData, setDashboardData] = useState({\n    totalUsers: 0,\n    totalStores: 0,\n    totalRatings: 0\n  });\n  const cardsRef = useRef([]);\n\n  // Fetch dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await axios.get('/admin/dashboard');\n        setDashboardData(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // GSAP animation on mount\n  useEffect(() => {\n    if (cardsRef.current.length > 0) {\n      gsap.from(cardsRef.current, {\n        opacity: 0,\n        y: 50,\n        duration: 0.8,\n        stagger: 0.2,\n        ease: 'power3.out'\n      });\n    }\n  }, [dashboardData]);\n  const stats = [{\n    title: 'Total Users',\n    value: dashboardData.totalUsers\n  }, {\n    title: 'Total Stores',\n    value: dashboardData.totalStores\n  }, {\n    title: 'Total Ratings',\n    value: dashboardData.totalRatings\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 p-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-8 text-gray-800\",\n      children: \"Admin Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-1 md:grid-cols-3 gap-6\",\n      children: stats.map((stat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: el => cardsRef.current[index] = el,\n        className: \"bg-white shadow-lg rounded-xl p-6 flex flex-col items-center justify-center text-center transform transition hover:scale-105 hover:shadow-2xl\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-500 mb-2\",\n          children: stat.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-3xl font-semibold text-gray-800\",\n          children: stat.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 13\n        }, this)]\n      }, stat.title, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"FytFq8nG24DLV7rJ4nFuogNKpdg=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","useRef","axios","gsap","jsxDEV","_jsxDEV","Dashboard","_s","dashboardData","setDashboardData","totalUsers","totalStores","totalRatings","cardsRef","fetchDashboardData","response","get","data","error","console","current","length","from","opacity","y","duration","stagger","ease","stats","title","value","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","stat","index","ref","el","_c","$RefreshReg$"],"sources":["D:/Project/P12/P12/store-rating-review-app/frontend/src/components/Admin/Dashboard.tsx"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport axios from 'axios';\nimport gsap from 'gsap';\n\ninterface DashboardData {\n  totalUsers: number;\n  totalStores: number;\n  totalRatings: number;\n}\n\ninterface Stat {\n  title: string;\n  value: number;\n}\n\nconst Dashboard: React.FC = () => {\n  const [dashboardData, setDashboardData] = useState<DashboardData>({\n    totalUsers: 0,\n    totalStores: 0,\n    totalRatings: 0,\n  });\n\n  const cardsRef = useRef<HTMLDivElement[]>([]);\n\n  // Fetch dashboard data\n  useEffect(() => {\n    const fetchDashboardData = async () => {\n      try {\n        const response = await axios.get('/admin/dashboard');\n        setDashboardData(response.data);\n      } catch (error) {\n        console.error('Error fetching dashboard data:', error);\n      }\n    };\n    fetchDashboardData();\n  }, []);\n\n  // GSAP animation on mount\n  useEffect(() => {\n    if (cardsRef.current.length > 0) {\n      gsap.from(cardsRef.current, {\n        opacity: 0,\n        y: 50,\n        duration: 0.8,\n        stagger: 0.2,\n        ease: 'power3.out',\n      });\n    }\n  }, [dashboardData]);\n\n  const stats: Stat[] = [\n    { title: 'Total Users', value: dashboardData.totalUsers },\n    { title: 'Total Stores', value: dashboardData.totalStores },\n    { title: 'Total Ratings', value: dashboardData.totalRatings },\n  ];\n\n  return (\n    <div className=\"min-h-screen bg-gray-100 p-6\">\n      <h1 className=\"text-4xl font-bold mb-8 text-gray-800\">Admin Dashboard</h1>\n\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n        {stats.map((stat, index) => (\n          <div\n            key={stat.title}\n            ref={(el) => (cardsRef.current[index] = el!)}\n            className=\"bg-white shadow-lg rounded-xl p-6 flex flex-col items-center justify-center text-center transform transition hover:scale-105 hover:shadow-2xl\"\n          >\n            <p className=\"text-gray-500 mb-2\">{stat.title}</p>\n            <p className=\"text-3xl font-semibold text-gray-800\">{stat.value}</p>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,MAAM;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAaxB,MAAMC,SAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAgB;IAChEU,UAAU,EAAE,CAAC;IACbC,WAAW,EAAE,CAAC;IACdC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGZ,MAAM,CAAmB,EAAE,CAAC;;EAE7C;EACAF,SAAS,CAAC,MAAM;IACd,MAAMe,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAC,kBAAkB,CAAC;QACpDP,gBAAgB,CAACM,QAAQ,CAACE,IAAI,CAAC;MACjC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IACDJ,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAf,SAAS,CAAC,MAAM;IACd,IAAIc,QAAQ,CAACO,OAAO,CAACC,MAAM,GAAG,CAAC,EAAE;MAC/BlB,IAAI,CAACmB,IAAI,CAACT,QAAQ,CAACO,OAAO,EAAE;QAC1BG,OAAO,EAAE,CAAC;QACVC,CAAC,EAAE,EAAE;QACLC,QAAQ,EAAE,GAAG;QACbC,OAAO,EAAE,GAAG;QACZC,IAAI,EAAE;MACR,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACnB,aAAa,CAAC,CAAC;EAEnB,MAAMoB,KAAa,GAAG,CACpB;IAAEC,KAAK,EAAE,aAAa;IAAEC,KAAK,EAAEtB,aAAa,CAACE;EAAW,CAAC,EACzD;IAAEmB,KAAK,EAAE,cAAc;IAAEC,KAAK,EAAEtB,aAAa,CAACG;EAAY,CAAC,EAC3D;IAAEkB,KAAK,EAAE,eAAe;IAAEC,KAAK,EAAEtB,aAAa,CAACI;EAAa,CAAC,CAC9D;EAED,oBACEP,OAAA;IAAK0B,SAAS,EAAC,8BAA8B;IAAAC,QAAA,gBAC3C3B,OAAA;MAAI0B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EAAC;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1E/B,OAAA;MAAK0B,SAAS,EAAC,uCAAuC;MAAAC,QAAA,EACnDJ,KAAK,CAACS,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrBlC,OAAA;QAEEmC,GAAG,EAAGC,EAAE,IAAM5B,QAAQ,CAACO,OAAO,CAACmB,KAAK,CAAC,GAAGE,EAAK;QAC7CV,SAAS,EAAC,+IAA+I;QAAAC,QAAA,gBAEzJ3B,OAAA;UAAG0B,SAAS,EAAC,oBAAoB;UAAAC,QAAA,EAAEM,IAAI,CAACT;QAAK;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAClD/B,OAAA;UAAG0B,SAAS,EAAC,sCAAsC;UAAAC,QAAA,EAAEM,IAAI,CAACR;QAAK;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAL/DE,IAAI,CAACT,KAAK;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMZ,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC7B,EAAA,CA3DID,SAAmB;AAAAoC,EAAA,GAAnBpC,SAAmB;AA6DzB,eAAeA,SAAS;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}