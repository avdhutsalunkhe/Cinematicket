{"ast":null,"code":"// lib/utils.ts\n\nfunction clsx(...inputs) {\n  return inputs.reduce((arr, input) => {\n    if (Array.isArray(input)) {\n      arr.push(...input);\n    } else {\n      arr.push(input);\n    }\n    return arr;\n  }, []).filter(Boolean).map(input => {\n    if (typeof input === \"string\" || typeof input === \"number\") {\n      return input;\n    }\n    if (Array.isArray(input)) {\n      return clsx(...input);\n    }\n    if (typeof input === \"object\" && input !== null) {\n      return Object.keys(input).filter(key => input[key]).join(\" \");\n    }\n    return \"\";\n  }).filter(Boolean).join(\" \");\n}\n\n// Simple tailwind-merge alternative: just returns the string as is\nfunction twMerge(classNames) {\n  return classNames;\n}\nexport function cn(...inputs) {\n  return twMerge(clsx(...inputs));\n}","map":{"version":3,"names":["clsx","inputs","reduce","arr","input","Array","isArray","push","filter","Boolean","map","Object","keys","key","join","twMerge","classNames","cn"],"sources":["D:/Project/P12/P12/store-rating-review-app/frontend/src/lib/utils.ts"],"sourcesContent":["// lib/utils.ts\r\n\r\ntype ClassValue = string | number | null | boolean | undefined | ClassDictionary | ClassArray;\r\ninterface ClassDictionary {\r\n  [id: string]: any;\r\n}\r\ninterface ClassArray extends Array<ClassValue> {}\r\n\r\nfunction clsx(...inputs: ClassValue[]): string {\r\n  return inputs\r\n    .reduce<ClassValue[]>((arr, input) => {\r\n      if (Array.isArray(input)) {\r\n        arr.push(...input);\r\n      } else {\r\n        arr.push(input);\r\n      }\r\n      return arr;\r\n    }, [])\r\n    .filter(Boolean)\r\n    .map((input) => {\r\n      if (typeof input === \"string\" || typeof input === \"number\") {\r\n        return input;\r\n      }\r\n      if (Array.isArray(input)) {\r\n        return clsx(...input);\r\n      }\r\n      if (typeof input === \"object\" && input !== null) {\r\n        return Object.keys(input)\r\n          .filter((key) => input[key])\r\n          .join(\" \");\r\n      }\r\n      return \"\";\r\n    })\r\n    .filter(Boolean)\r\n    .join(\" \");\r\n}\r\n\r\n// Simple tailwind-merge alternative: just returns the string as is\r\nfunction twMerge(classNames: string): string {\r\n  return classNames;\r\n}\r\n\r\nexport function cn(...inputs: ClassValue[]) {\r\n  return twMerge(clsx(...inputs));\r\n}\r\n"],"mappings":"AAAA;;AAQA,SAASA,IAAIA,CAAC,GAAGC,MAAoB,EAAU;EAC7C,OAAOA,MAAM,CACVC,MAAM,CAAe,CAACC,GAAG,EAAEC,KAAK,KAAK;IACpC,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxBD,GAAG,CAACI,IAAI,CAAC,GAAGH,KAAK,CAAC;IACpB,CAAC,MAAM;MACLD,GAAG,CAACI,IAAI,CAACH,KAAK,CAAC;IACjB;IACA,OAAOD,GAAG;EACZ,CAAC,EAAE,EAAE,CAAC,CACLK,MAAM,CAACC,OAAO,CAAC,CACfC,GAAG,CAAEN,KAAK,IAAK;IACd,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MAC1D,OAAOA,KAAK;IACd;IACA,IAAIC,KAAK,CAACC,OAAO,CAACF,KAAK,CAAC,EAAE;MACxB,OAAOJ,IAAI,CAAC,GAAGI,KAAK,CAAC;IACvB;IACA,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE;MAC/C,OAAOO,MAAM,CAACC,IAAI,CAACR,KAAK,CAAC,CACtBI,MAAM,CAAEK,GAAG,IAAKT,KAAK,CAACS,GAAG,CAAC,CAAC,CAC3BC,IAAI,CAAC,GAAG,CAAC;IACd;IACA,OAAO,EAAE;EACX,CAAC,CAAC,CACDN,MAAM,CAACC,OAAO,CAAC,CACfK,IAAI,CAAC,GAAG,CAAC;AACd;;AAEA;AACA,SAASC,OAAOA,CAACC,UAAkB,EAAU;EAC3C,OAAOA,UAAU;AACnB;AAEA,OAAO,SAASC,EAAEA,CAAC,GAAGhB,MAAoB,EAAE;EAC1C,OAAOc,OAAO,CAACf,IAAI,CAAC,GAAGC,MAAM,CAAC,CAAC;AACjC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}